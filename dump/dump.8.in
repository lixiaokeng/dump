.\" Copyright (c) 1980, 1991, 1993
.\"	 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$Id: dump.8.in,v 1.23 2001/03/23 14:40:12 stelian Exp $
.\"
.Dd __DATE__
.Dt DUMP 8
.Os "dump __VERSION__"
.Sh NAME
.Nm dump
.Nd ext2 filesystem backup
.Sh SYNOPSIS
.Nm dump
.Op Fl 0123456789ackMnSu
.Op Fl B Ar records
.Op Fl b Ar blocksize
.Op Fl d Ar density
.Op Fl e Ar inode number
.Op Fl f Ar file
.Op Fl F Ar script
.Op Fl h Ar level
.Op Fl L Ar label
.Op Fl s Ar feet
.Op Fl T Ar date
.Op Fl z Ar compression level
.Ar file-to-dump
.Nm dump
.Op Fl W Li \&| Fl w
.Pp
.in
(The
.Bx 4.3
option syntax is implemented for backward compatibility but
is not documented here.)
.Sh DESCRIPTION
.Nm Dump
examines files
on an ext2 filesystem
and determines which files
need to be backed up. These files
are copied to the given disk, tape or other
storage medium for safe keeping (see the
.Fl f
option below for doing remote backups).
A dump that is larger than the output medium is broken into
multiple volumes.
On most media the size is determined by writing until an
end-of-media indication is returned.
.Pp
On media that cannot reliably return an end-of-media indication
(such as some cartridge tape drives), each volume is of a fixed size;
the actual size is determined by specifying cartridge media, or via the
tape size, density and/or block count options below.
By default, the same output file name is used for each volume
after prompting the operator to change media.
.Pp
.Ar file-to-dump
is either a mountpoint of a filesystem
or a directory to be backed up as a subset of a filesystem.
In the former case, either the path to a mounted filesystem
or the device of an unmounted filesystem can be used.
In the latter case, certain restrictions are placed on the backup:
.Fl u
is not allowed and the only dump level that is supported is
.Fl 0 .
.Pp
The following options are supported by
.Nm Ns :
.Bl -tag -width Ds
.It Fl 0\-9
Dump levels.
A level 0, full backup,
guarantees the entire file system is copied
(but see also the
.Fl h
option below).
A level number above 0,
incremental backup,
tells
.Nm dump
to
copy all files new or modified since the
last dump of a lower level.
The default level is 9.
.It Fl B Ar records
The number of 1 KB blocks per volume.
This option overrides the end-of-media detection, and calculation 
of tape size based on length and density.
.It Fl a
.Dq auto-size .
Bypass all tape length calculations, and write
until an end-of-media indication is returned.  This works best
for most modern tape drives, and is the default.  
Use of this option is particularly recommended when appending to an 
existing tape, or using a tape drive with hardware compression 
(where you can never be sure about the compression ratio).
.It Fl b Ar blocksize
The number of kilobytes per dump record.
Since the IO system slices all requests into chunks of MAXBSIZE
(typically 64KB), it is not possible to use a larger blocksize
without having problems later with
.Xr restore 8 .
Therefore
.Nm dump
will constrain writes to MAXBSIZE.
The default blocksize is 10.
.It Fl c
Change the defaults for use with a cartridge tape drive, with a density
of 8000 bpi, and a length of 1700 feet. Specifying a cartridge drive
overrides the end-of-media detection.
.It Fl e Ar inode
Exclude 
.Ar inode
from the dump (you can use 
.Ar stat 
to find the inode number for a file or directory).
.It Fl h Ar level
Honor the user
.Dq nodump
flag
.Dp Dv UF_NODUMP
only for dumps at or above the given
.Ar level .
The default honor level is 1,
so that incremental backups omit such files
but full backups retain them.
.It Fl d Ar density
Set tape density to
.Ar density .
The default is 1600BPI. Specifying a tape density overrides the 
end-of-media detection.
.It Fl f Ar file
Write the backup to
.Ar file ;
.Ar file
may be a special device file
like
.Pa /dev/st0
(a tape drive),
.Pa /dev/rsd1c
(a floppy disk drive),
an ordinary file,
or
.Ql Fl
(the standard output).
Multiple file names may be given as a single argument separated by commas.
Each file will be used for one dump volume in the order listed;
if the dump requires more volumes than the number of names given,
the last file name will used for all remaining volumes after prompting
for media changes.
If the name of the file is of the form
.Dq host:file
or
.Dq user@host:file
.Nm
writes to the named file on the remote host using
.Xr rmt 8 .
The default path name of the remote
.Xr rmt 8
program is
.\" rmt path, is the path on the remote host
.Pa /etc/rmt ;
this can be overridden by the environment variable
.Ev RMT .
.It Fl F Ar script
Run script at the end of each tape. The device name and the
current volume number are passed on the command line.
The script must return 0 if 
.Nm
should continue without asking the user to change the tape, 1 if 
.Nm
dump should continue but ask the user to change the tape. 
Any other exit code will cause
.Nm
to abort.
For security reasons,
.Nm
reverts back to the real user ID and the real group ID before 
running the script.
.It Fl k
Use Kerberos authentication to talk to remote tape servers.  (Only
available if this option was enabled when
.Nm
was compiled.)
.It Fl L Ar label
The user-supplied text string
.Ar label
is placed into the dump header, where tools like
.Xr restore 8
and
.Xr file 1
can access it.
Note that this label is limited
to be at most LBLSIZE (currently 16) characters, which must include
the terminating
.Ql \e0 .
.It Fl M
Enable the multi-volume feature. The name specified with 
.Fl f 
is treated as a prefix and 
.Nm
writes in sequence to <prefix>001, <prefix>002 etc. This can be
useful when dumping to files on an ext2 partition, in order to bypass
the 2GB file size limitation.
.It Fl n
Whenever
.Nm
requires operator attention,
notify all operators in the group
.Dq operator
by means similar to a
.Xr wall 1 .
.It Fl s Ar feet
Attempt to calculate the amount of tape needed at a particular density.
If this amount is exceeded,
.Nm
prompts for a new tape.
It is recommended to be a bit conservative on this option.
The default tape length is 2300 feet. Specifying the tape size 
overrides end-of-media detection.
.ne 1i
.It Fl S
Size estimate. Determine the amount of space
that is needed to perform the dump without
actually doing it, and display the estimated
number of bytes it will take. This is useful
with incremental dumps to determine how many
volumes of media will be needed.
.It Fl T Ar date
Use the specified date as the starting time for the dump
instead of the time determined from looking in
.Pa __DUMPDATES__ .
The format of
.Ar date
is the same as that of
.Xr ctime 3 .
This option is useful for automated dump scripts that wish to
dump over a specific period of time.
The
.Fl T
option is mutually exclusive from the
.Fl u
option.
.It Fl u
Update the file
.Pa __DUMPDATES__
after a successful dump.
The format of
.Pa __DUMPDATES__
is readable by people, consisting of one
free format record per line:
filesystem name,
increment level
and
.Xr ctime 3
format dump date. 
There may be only one entry per filesystem at each level.
The file
.Pa __DUMPDATES__
may be edited to change any of the fields,
if necessary.
.It Fl W
.Nm Dump
tells the operator what file systems need to be dumped.
This information is gleaned from the files
.Pa __DUMPDATES__
and
.Pa /etc/fstab .
The
.Fl W
option causes
.Nm
to print out, for all file systems in
.Pa __DUMPDATES__ ,
and regognized file systems in
.Pa /etc/fstab .
the most recent dump date and level,
and highlights those that should be dumped.
If the
.Fl W
option is set, all other options are ignored, and
.Nm
exits immediately.
.It Fl w
Is like
.Fl W ,
but prints only recognized filesystems in
.Pa /etc/fstab
which need to be dumped.
.It Fl z Ar compression level
Compress every block to be written on the tape using zlib library. This
option will work only when dumping to a file or pipe or, when dumping
to a tape drive, if the tape drive is capable of writing variable 
length blocks. You will need at least the 0.4b22 version of restore in 
order to extract compressed tapes. Tapes written using compression will
not be compatible with the BSD tape format. The (optional) parameter 
specifies the compression level zlib will use. The default compression
level is 2.
.El
.Pp
.Nm Dump
requires operator intervention on these conditions:
end of tape,
end of dump,
tape write error,
tape open error or
disk read error (if there is more than a threshold of 32).
In addition to alerting all operators implied by the
.Fl n
key,
.Nm
interacts with the operator on
.Em dump's
control terminal at times when
.Nm
can no longer proceed,
or if something is grossly wrong.
All questions
.Nm
poses
.Em must
be answered by typing
.Dq yes
or
.Dq no ,
appropriately.
.Pp
Since making a dump involves a lot of time and effort for full dumps,
.Nm
checkpoints itself at the start of each tape volume.
If writing that volume fails for some reason,
.Nm
will,
with operator permission,
restart itself from the checkpoint
after the old tape has been rewound and removed,
and a new tape has been mounted.
.Pp
.Nm Dump
tells the operator what is going on at periodic intervals,
including usually low estimates of the number of blocks to write,
the number of tapes it will take, the time to completion, and
the time to the tape change.
The output is verbose,
so that others know that the terminal
controlling
.Nm
is busy,
and will be for some time.
.Pp
In the event of a catastrophic disk event, the time required
to restore all the necessary backup tapes or files to disk
can be kept to a minimum by staggering the incremental dumps.
An efficient method of staggering incremental dumps
to minimize the number of tapes follows:
.Bl -bullet -offset indent
.It
Always start with a level 0 backup, for example:
.Bd -literal -offset indent
/sbin/dump -0u -f /dev/st0 /usr/src
.Ed
.Pp
This should be done at set intervals, say once a month or once every two months,
and on a set of fresh tapes that is saved forever.
.It
After a level 0, dumps of active file
systems are taken on a daily basis,
using a modified Tower of Hanoi algorithm,
with this sequence of dump levels:
.Bd -literal -offset indent
3 2 5 4 7 6 9 8 9 9 ...
.Ed
.Pp
For the daily dumps, it should be possible to use a fixed number of tapes
for each day, used on a weekly basis.
Each week, a level 1 dump is taken, and
the daily Hanoi sequence repeats beginning with 3.
For weekly dumps, another fixed set of tapes per dumped file system is
used, also on a cyclical basis.
.El
.Pp
After several months or so, the daily and weekly tapes should get
rotated out of the dump cycle and fresh tapes brought in.
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev TAPE
If no -f option was specified,
.Nm
will use the device specified via
.Ev TAPE
as the dump device.
.Ev TAPE
may be of the form
.Qq tapename ,
.Qq host:tapename ,
or
.Qq user@host:tapename .
.It Ev RMT
The environment variable
.Ev RMT
will be used to determine the pathname of the remote
.Xr rmt 8
program.
.It Ev RSH
.Nm Dump
uses the contents of this variable to determine the name of the
remote shell command to use when doing remote backups (rsh, ssh etc.). 
If this variable is not set, 
.Xr rcmd 3
will be used, but only root will be able to do remote backups.
.Sh FILES
.Bl -tag -width __DUMPDATES__ -compact
.It Pa /dev/st0
default tape unit to dump to
.It Pa __DUMPDATES__
dump date records
.It Pa /etc/fstab
dump table: file systems and frequency
.It Pa /etc/group
to find group
.Em operator
.El
.Sh SEE ALSO
.Xr fstab 5 ,
.Xr restore 8 ,
.Xr rmt 8
.Sh DIAGNOSTICS
Many, and verbose.
.Pp
.Nm Dump
exits with zero status on success.
Startup errors are indicated with an exit code of 1;
abnormal termination is indicated with an exit code of 3.
.Sh BUGS
It might be considered a bug that this version of dump can only handle ext2
filesystems.  Specifically, it does not work with FAT filesystems.
.Pp
Fewer than 32 read errors on the filesystem are ignored. If noticing
read errors is important, the output from dump can be parsed to look for lines
that contain the text 'read error'.
.Pp
Each reel requires a new process, so parent processes for
reels already written just hang around until the entire tape
is written.
.Pp
It would be nice if
.Nm
knew about the dump sequence,
kept track of the tapes scribbled on,
told the operator which tape to mount when,
and provided more assistance
for the operator running
.Xr restore .
.Pp
.Nm Dump
cannot do remote backups without being run as root, due to its
security history.
Presently, it works if you set it setuid (like it used to be), but this
might constitute a security risk. Note that you can set RSH to use
a remote shell program instead.
.Sh AUTHOR
The 
.Nm dump/restore
backup suite was ported to Linux's Second Extended File System
by Remy Card <card@Linux.EU.Org>. He maintained the initial versions
of dump (up and including 0.4b4, released in january 1997).
.Pp
Starting with 0.4b5, the new maintainer is Stelian Pop 
.br
<pop@noos.fr>.
.Sh AVAILABILITY
The
.Nm dump/restore
backup suite is available from 
.br
http://dump.sourceforge.net
.Sh HISTORY
A
.Nm
command appeared in
.At v6 .
